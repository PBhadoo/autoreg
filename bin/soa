#!/bin/sh
# $Id$

# options:
#	-r to kill -1 named, if a zone has changed
#	-c to be quiet if nothing has changed (useful in cron jobs)

# Where to find the "access-zone" script
AZ=/usr/local/autoreg/bin/access-zone
# The directory where "master" zone files are located
DEST=/etc/namedb/autoreg
# Command to reload the nameserver. Used only if option -r is provided.
NDC=/usr/local/sbin/rndc
# DNS Zone signing
SIGNZONE=/usr/local/sbin/dnssec-signzone
#
NDCKEY=/etc/namedb/rndc-autoreg.key

if [ "$USER" = "root" ]; then USER=DNSADMIN; fi

if [ "$USER" = "" ]; then
	echo '$USER not set'
	exit 2
fi

if [ "$*" = "" ]; then
	echo "usage: $0 [-c] [-r] zonelist"
	exit 2
fi

optr=0
optc=0

while [ X$1 = X-r -o X$1 = X-c ]; do
  case "$1" in
  -r) optr=1; shift ;;
  -c) optc=1; shift ;;
  esac
done

for i in $*
do
	oldser=`awk <$DEST/$i 'NR>10 {exit 1} $2=="SOA" {print $5; exit 0}'`
	if [ "$oldser" = "" ]; then
		echo "Error: cannot get old serial for $i"
		exit 2
	fi
	newser=`$AZ -u$USER -asoa $i`
	if [ "$newser" = "" ]; then
		echo "Error: cannot get new serial for $i"
		exit 2
	fi

	if [ "$newser" != "$oldser" ]; then
	    if [ -r $DEST/$i ]; then
		echo $i updated
		if (
		  echo "; AUTOMATICALLY GENERATED -- DON'T EDIT THIS FILE"
		  echo ";"
		  # access-zone is used to get a ASCII dump of the zone.
		  # If it returns false, the copy to stdout failed.
		  $AZ -u$USER -acat $i) > $DEST/$i.new &&
		#
		# Copy apparently ok, check it.
		#
		(tail -5 $DEST/$i.new | grep -q ^_EU-ORG-END-MARKER); then
		    # Copy ok, show diffs
		    diff -U2 $DEST/$i $DEST/$i.new
		    # replace the older file
		    mv -f $DEST/$i $DEST/$i.old
		    mv -f $DEST/$i.new $DEST/$i

		    echo ----
		    # Sign zone, if relevant
		    if [ -f $DEST/$i.DNSSEC ]; then
			(
			cd $DEST
			rm -f $i.signed.old
			ln $i.signed $i.signed.old
			if $SIGNZONE -QR -DS -3 fadaf001 -l dlv.isc.org -O full -j432000 -o $i -f $i.signed $i.DNSSEC; then
			    grep -v '^;' $i.signed | sort > $i.signed.sorted
			    mv $i.signed.sorted $i.signed
			    diff -u $i.signed.old $i.signed
			    return 0
			else
			    return 1
			fi
			) && mod=1
		    else
			mod=1
		    fi
		else
		    echo "Error: cannot dump zone $i to $DEST/$i.new"
		    rm -f $DEST/$i.new
		fi
	   else
		echo "Error: cannot read $DEST/$i"
	   fi
	fi
done

if [ "$mod" != "" ]; then
	if [ $optr = 1 ]; then
		echo "reloading"
		$NDC -k $NDCKEY reload
	else
		if [ $optc = 0 ]; then echo "now:" echo "$NDC reload"; fi
	fi
	exit 1
else
	if [ $optc = 0 ]; then echo no change.; fi
	exit 0
fi
